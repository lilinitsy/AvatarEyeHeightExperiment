// Fill out your copyright notice in the Description page of Project Settings.
//
//
//
//
//
/* USE VRPawn INSTEAD OF VRCHARACTER*/
//
//
//
//
//

#include "VRCharacter.h"

#include "Engine/Engine.h"
#include "Engine/EngineTypes.h"
#include "IXRTrackingSystem.h"
#include "HeadMountedDisplay.h"

// Sets default values
AVRCharacter::AVRCharacter()
{
 	// Set this character to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

	vr_origin = CreateDefaultSubobject<USceneComponent>(TEXT("vr_origin"));
	//vr_origin->AttachToComponent(RootComponent, FAttachmentTransformRules(EAttachmentRule::SnapToTarget, true));
	vr_origin->SetupAttachment(RootComponent);

	camera = CreateDefaultSubobject<UCameraComponent>(TEXT("camera"));
	//camera->AttachToComponent(vr_origin, FAttachmentTransformRules(EAttachmentRule::SnapToTarget, true));
	vr_origin->SetupAttachment(vr_origin);

	//left_hand = CreateDefaultSubobject<UMotionControllerComponent>(TEXT("left_hand"));
	//left_hand->MotionSource = EControllerHand::Left;
}

// Called when the game starts or when spawned
void AVRCharacter::BeginPlay()
{
	Super::BeginPlay();
	
}

// Called every frame
void AVRCharacter::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

// Called to bind functionality to input
void AVRCharacter::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
	Super::SetupPlayerInputComponent(PlayerInputComponent);

}


void AVRCharacter::reset_hmd_origin()
{
	IHeadMountedDisplay *hmd = GEngine->XRSystem->GetHMDDevice();

	if (hmd && hmd->IsHMDEnabled())
	{
		GEngine->XRSystem->ResetOrientationAndPosition();
	}
}


void AVRCharacter::toggle_seating()
{
	// TODO
}


/*
Begin Object Class = / Script / BlueprintGraph.K2Node_CallFunction Name = "K2Node_CallFunction_1"
FunctionReference = (MemberParent = Class'"/Script/HeadMountedDisplay.HeadMountedDisplayFunctionLibrary"', MemberName = "ResetOrientationAndPosition")
NodePosX = 560
NodePosY = 416
NodeGuid = FC38C10E4D7D02C7B7E2319BA184041F
CustomProperties Pin(PinId = 318B6F9949BFEE9A558FE3BB14531EAB, PinName = "execute", PinToolTip = "\nExec", PinType.PinCategory = "exec", PinType.PinSubCategory = "", PinType.PinSubCategoryObject = None, PinType.PinSubCategoryMemberReference = (), PinType.PinValueType = (), PinType.ContainerType = None, PinType.bIsArray = False, PinType.bIsReference = False, PinType.bIsConst = False, PinType.bIsWeakPointer = False, PersistentGuid = 00000000000000000000000000000000, bHidden = False, bNotConnectable = False, bDefaultValueIsReadOnly = False, bDefaultValueIsIgnored = False, bAdvancedView = False, bOrphanedPin = False, )
CustomProperties Pin(PinId = 686262E940761F7C69367F8566E7959D, PinName = "then", PinToolTip = "\nExec", Direction = "EGPD_Output", PinType.PinCategory = "exec", PinType.PinSubCategory = "", PinType.PinSubCategoryObject = None, PinType.PinSubCategoryMemberReference = (), PinType.PinValueType = (), PinType.ContainerType = None, PinType.bIsArray = False, PinType.bIsReference = False, PinType.bIsConst = False, PinType.bIsWeakPointer = False, LinkedTo = (K2Node_CallFunction_93 A6DED71448C929E812CF998867894237, ), PersistentGuid = 00000000000000000000000000000000, bHidden = False, bNotConnectable = False, bDefaultValueIsReadOnly = False, bDefaultValueIsIgnored = False, bAdvancedView = False, bOrphanedPin = False, )
CustomProperties Pin(PinId = 780D5ECE45584381B09520B8B3915B3E, PinName = "self", PinFriendlyName = NSLOCTEXT("K2Node", "Target", "Target"), PinToolTip = "Target\nHead Mounted Display Function Library Object Reference", PinType.PinCategory = "object", PinType.PinSubCategory = "", PinType.PinSubCategoryObject = Class'"/Script/HeadMountedDisplay.HeadMountedDisplayFunctionLibrary"', PinType.PinSubCategoryMemberReference = (), PinType.PinValueType = (), PinType.ContainerType = None, PinType.bIsArray = False, PinType.bIsReference = False, PinType.bIsConst = False, PinType.bIsWeakPointer = False, DefaultObject = "/Script/HeadMountedDisplay.Default__HeadMountedDisplayFunctionLibrary", PersistentGuid = 00000000000000000000000000000000, bHidden = True, bNotConnectable = False, bDefaultValueIsReadOnly = False, bDefaultValueIsIgnored = False, bAdvancedView = False, bOrphanedPin = False, )
CustomProperties Pin(PinId = A1CD55B54A522A2BC18FB780F0F7C6B6, PinName = "Yaw", PinToolTip = "Yaw\nFloat\n\n(in) the desired yaw to be set after orientation reset.", PinType.PinCategory = "float", PinType.PinSubCategory = "", PinType.PinSubCategoryObject = None, PinType.PinSubCategoryMemberReference = (), PinType.PinValueType = (), PinType.ContainerType = None, PinType.bIsArray = False, PinType.bIsReference = False, PinType.bIsConst = False, PinType.bIsWeakPointer = False, DefaultValue = "0.000000", AutogeneratedDefaultValue = "0.000000", PersistentGuid = 00000000000000000000000000000000, bHidden = False, bNotConnectable = False, bDefaultValueIsReadOnly = False, bDefaultValueIsIgnored = False, bAdvancedView = False, bOrphanedPin = False, )
CustomProperties Pin(PinId = 35DD614F40B07D11B7275BA6D772106E, PinName = "Options", PinToolTip = "Options\nEOrientPositionSelector Enum\n\n(in) specifies either position, orientation or both should be reset.", PinType.PinCategory = "byte", PinType.PinSubCategory = "", PinType.PinSubCategoryObject = Enum'"/Script/HeadMountedDisplay.EOrientPositionSelector"', PinType.PinSubCategoryMemberReference = (), PinType.PinValueType = (), PinType.ContainerType = None, PinType.bIsArray = False, PinType.bIsReference = False, PinType.bIsConst = False, PinType.bIsWeakPointer = False, DefaultValue = "OrientationAndPosition", AutogeneratedDefaultValue = "OrientationAndPosition", PersistentGuid = 00000000000000000000000000000000, bHidden = False, bNotConnectable = False, bDefaultValueIsReadOnly = False, bDefaultValueIsIgnored = False, bAdvancedView = False, bOrphanedPin = False, )
End Object
*/